@merge module Stripe {
    func getBalanceTransactions(
        key: String, limit: Int, startId: String, verbose: Bool
    ): Possible[Array[SrdRef[BalanceTransaction]]] {
        return getRecords[BalanceTransaction, convertToBalanceTransaction](
            key, String("https:/api.stripe.com/v1/balance_transactions"), limit, startId, verbose
        );
    }

    func getBalanceTransaction(key: String, id: String, verbose: Bool): SrdRef[BalanceTransaction] {
        return getRecords[BalanceTransaction, convertToBalanceTransaction](
            key, "https:/api.stripe.com/v1/balance_transactions", id, verbose
        );
    }

    func convertToBalanceTransaction(balanceTransactionJson: Json): SrdRef[BalanceTransaction] {
        def balanceTransaction: SrdRef[BalanceTransaction];
        def i: Int = 0;
        def feeDetails: Array[String];
        for i = 0, i < balanceTransactionJson("fee_details").getLength(), i++ {
            feeDetails.add(balanceTransactionJson("fee_details")(i));
        }

        balanceTransaction = SrdRef[BalanceTransaction](). {
            alloc()~init(
                balanceTransactionJson("id"),
                balanceTransactionJson("amount"),
                balanceTransactionJson("available_on"),
                balanceTransactionJson("created"),
                balanceTransactionJson("currency"),
                balanceTransactionJson("description"),
                balanceTransactionJson("exchange_rate"),
                balanceTransactionJson("fee"),
                feeDetails,
                balanceTransactionJson("net"),
                balanceTransactionJson("reporting_category"),
                balanceTransactionJson("source"),
                balanceTransactionJson("status"),
                balanceTransactionJson("type")
            );
        }
        return balanceTransaction;
    }
}
