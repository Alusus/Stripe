@merge module Stripe {
    func createBillingPortalSession(key: String, parameters: String, verbose: Bool): Possible[String] {
        def subscriptionId: String;
        def request: Net.Request(
            String("https://api.stripe.com/v1/billing_portal/sessions"),
            key, String("Bearer"),
            String("application/x-www-form-urlencoded")
        );
        request.verbose = verbose;
        request.post(parameters.buf);
        if request.responseHttpStatus == 401 {
            return Possible[String].failure(Errors.unauthenticated());
        } else if request.responseHttpStatus == 400 {
            return Possible[String].failure(Errors.invalidParams());
        } else if request.responseHttpStatus == 0 {
            return Possible[String].failure(Errors.connection());
        } else if request.responseHttpStatus != 200 {
            return Possible[String].failure(Errors.unexpected());
        }
        def billingPortalSessionObject: Json = request.responseBody;
        subscriptionId = billingPortalSessionObject.getString("url");
        return Possible[String].success(subscriptionId);
    }

    func createBillingPortalSession(
        key: String, customerId : String ,returnUrl: CharsPtr, verbose: Bool
    ): Possible[String] {
        if items.getLength() == 0 {
            return Possible[String].failure(Errors.invalidParams());
        }
        def parameters: String = String.format("customer=%s&return_url=%s"ØŒcustomerId.buf ,Net.uriEncode(returnUrl).buf);


        return createBillingPortalSession(key, parameters, verbose);
    }
}
